#!/usr/bin/env zsh

local plugins_path="${HOME}/.config/zsh"
local compdump_file="${HOME}/.zcompdump"

zplug-usage() {
  echo "Update zsh plugins"
  echo ""
  echo "Usage: zplug update"
  echo "       zplug add <git-url>"
  echo "       zplug init"
  echo "       zplug reinit"
  echo "       zplug help | -h | --help"
  echo ""
  echo "Options:"
  echo "  -h, --help     Show this screen."
  echo ""
}

zplug-clean() {
  local compdump_file="$1"

  if [[ -z "$compdump_file" ]]; then
    echo-err "Usage: ${0:t} <compdump file>"
    return 1
  fi

  [[ -f "$compdump_file.zwc" ]] && echo-run rm -f "$compdump_file.zwc"

  local zfile
  for zfile in ${ZDOTDIR:-${HOME}}/.z(shenv|profile|shrc|login|logout)(N-.); do
    echo-run rm -f "${zfile}.zwc" || return 1
  done
}

zplug-reinit() {
  local compdump_file="$1"

  if [[ -z "$compdump_file" ]]; then
    echo-err "Usage: ${0:t} <compdump file>"
    return 1
  fi

  [[ -f "$compdump_file" ]] && echo-run rm -f "$compdump_file"
  autoload -Uz compinit && echo-run compinit -d "${HOME}/.zcompdump"

  # autoload -Uz zrecompile
  # echo-run zrecompile -p -q "$compdump_file"

  # local zfile
  # for zfile in ${ZDOTDIR:-${HOME}}/.z(shenv|profile|shrc|login|logout)(N-.); do
  #   echo-run zrecompile -p -q "${zfile}" || return 1
  # done
}

zplug-update-plugins() {
  __update-plugin() {
    local dir="$1"
    local plugin_name=${dir##*/}
    if [[ -L "$dir" ]] || [[ ! -d "$dir/.git" ]]; then
      echo "$plugin_name: not updating, local plugin"
      return 1
    fi

    cd "$dir"
    local branch="$(git rev-parse --abbrev-ref --symbolic-full-name HEAD)"

    if [[ "$branch" == "HEAD" ]]; then
      echo "$plugin_name: not updating, detached HEAD"
      return 1
    fi

    local start_commit="$(git rev-parse HEAD)"
    git pull --quiet || { echo "$plugin_name: failed to pull"; return 1 }

    local commits=$(git rev-list --count "$start_commit"..."HEAD")
    [[ "$commits" -eq 0 ]] && echo "$plugin_name: nothing to update" && return 1

    local log="\n$(git log --oneline "$start_commit"..."HEAD")\n"
    echo "$plugin_name: updated $commits commit(s)$log"
  }

  local plugins_path="$1"
  (
  for dir in $plugins_path/*(/N); do
    ( __update-plugin "$dir" ) &
  done
  wait
  unfunction __update-plugin
)

}

zplug-add-plugin() {
  local plugin_url="$1"
  # Remove the beginning of the URL and any extension (like .git)
  local plugin_name="${plugin_url:t:r}"
  local plugin_path="$plugins_path/$plugin_name"

  if [[ ! -d "$plugin_path" ]]; then
    echo "Installing $plugin_name"
    echo-run git clone "$plugin_url" "$plugin_path"
    [[ "$?" -ne 0 ]] && return 1
    zplug-reinit "$compdump_file"
  fi
}

case $1 in
  clean)
    zplug-clean "$compdump_file"
    ;;

  update)
    zplug-update-plugins "$plugins_path"
    zplug-reinit "$compdump_file"
    ;;

  add)
    zplug-add-plugin "${@[2,-1]}"
    ;;

  reinit)
    zplug-reinit "$compdump_file"
    ;;

  help | --help | -h)
    zplug-usage
    ;;

  *)
    zplug-usage
    return 1
    ;;
esac

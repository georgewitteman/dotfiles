add_newline = false

format = """$shlvl\
hostname\
$directory\
$git_branch\
${custom.git_host}\
$git_commit\
$git_state\
$nodejs\
$python\
$time\
$cmd_duration\
$status\
${custom.stashes}\
$shell\
$line_break\
${custom.container}\
${custom.venv}\
$jobs\
$character"""

[directory]
fish_style_pwd_dir_length = 2

[status]
format = '[ $status( $signal_name) ]($style) '
disabled = false
style = 'fg:white bg:red bold'

[git_branch]
symbol = "Ôêò "

[git_status]
disabled = true

[python]
disabled = true
format = 'via [${pyenv_prefix}(${version} )(\($virtualenv\))]($style) '

[nodejs]
symbol = ''

[time]
disabled = false
use_12hr = true
time_format = '%I:%M %P'

[custom.container]
when = "test -f /.dockerenv || grep -q docker /proc/1/cgroup"
style = 'bold fg:purple'
command = "echo DOCKER"
description = "Identifies that we are in a container"

[custom.venv]
command = """
if [ "${VIRTUAL_ENV%%/src/.venv*}" != "$VIRTUAL_ENV" ]; then
  basename "${VIRTUAL_ENV%/*/*}"
else
  echo "${VIRTUAL_ENV#${VIRTUAL_ENV%/*/*}/}"
fi
"""
when = 'test -n "$VIRTUAL_ENV"'
format = '([\($output\)]($style) )'
style = "fg:242"
description = 'Custom formatted python virtual environment name'

[custom.git_host]
command = "command git ls-remote --get-url"
when = "command git rev-parse --is-inside-work-tree"
format = "at [$output]($style) "
disabled = true

[custom.stashes]
command = """
stash_count=$(wc -l $(command git rev-parse --git-dir)/logs/refs/stash | awk '{ print $1 }')
if [ "$stash_count" -eq 1 ]; then
  echo "${stash_count} stash"
else
  echo "${stash_count} stashes"
fi
"""
when = "test -f $(git rev-parse --git-dir)/logs/refs/stash"
format = "[$output]($style) "
style = 'fg:red bold'

[jobs]
symbol = '+'
style = 'fg:red bold'

[shell]
disabled = false

[shlvl]
disabled = false

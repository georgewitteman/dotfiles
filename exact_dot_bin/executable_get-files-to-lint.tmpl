#!/bin/sh

set -o errexit

verbose=true
debug=false

for arg in "$@"; do
  case "$arg" in
    -q | --quiet) verbose=false ;;
    -d | --debug) debug=true ;;
    -h | --help)
      echo "usage: $(basename "$0") [-v|--verbose] [-d|--debug]" >&2
      exit
      ;;
    *)
      if [ -f "$1" ]; then
        set -- "$@" "$1"
      fi
      ;;
  esac
  shift
done

files() {
  path="$1"
  # -L: Cause the file information and file type (see stat(2)) returned for
  # each symbolic link to be those of the file referenced by the link, not the
  # link itself. If the referenced file does not exist, the file information
  # and type will be for the link itself.
  find -L "$path" -type f -not -path '*/\.git/*' -not -name 'tags'
}

lint_file() {
  echo "$file"
  if $verbose; then
    echo "Linting ${file}" >&2
  fi
}

lint_path() {
  file="$1"
  if [ ! -f "$file" ] || [ ! -r "$file" ]; then
    return
  fi
  case "$file" in
    *.bash | *.sh)
      lint_file "$file"
      return
      ;;
  esac
  case $(head -1 "$file") in
    *bash* | */sh* | *env\ sh*)
      lint_file "$file"
      ;;
    *)
      if $debug; then
        echo "Skipping ${file}" >&2
      fi
      ;;
  esac
}

if [ $# -gt 0 ]; then
  for f in "$@"; do
    lint_path "$f"
  done
  exit
fi

for file in $(files {{ joinPath .chezmoi.homeDir .private_bin | quote }}) \
  ~/.shinit ~/.profile ~/.bashrc ~/.bash_profile $(files ~/.config/git); do
  lint_path "$file"
done

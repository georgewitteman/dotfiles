#!/bin/sh

set -o errexit

if ! in-git-repo; then
  echo-err "Not in a git repository."
  exit 128
fi

USAGE="usage: $(basename "$0") [<options>] [--] [<commit message>...]

    -a, --add             add all changes
    -p, --push            push branch to remote
    -s, --pull            pull (sync) remote changes using \`git pull --rebase\`
    -f, --force           force updates
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --amend               amend previous commit
"

die() {
  [ "$#" -ge 2 ] && echo-err "$2"
  exit "$1"
}

pull=false
push=false
message=''
force=false
no_verify=false
add=false
amend=false

while [ "$#" -gt 0 ]; do
  case "$1" in
    -[[:alnum:]][[:alnum:]]*)
      _value="-${1##-?}"
      _arg="${1%%"${1##-?}"}"
      ;;
  esac
  if [ -n "${_arg:-}${_value:-}" ]; then
    shift
    set -- "$_arg" "$_value" "$@"
  fi
  unset _arg _value
  case "$1" in
    -h | --help)
      echo "$USAGE"
      exit
      ;;
    -a | --add)
      add=true
      ;;
    -f | --force)
      force=true
      ;;
    -p | --push)
      push=true
      ;;
    -s | --pull)
      # s: sync
      pull=true
      ;;
    --amend)
      amend=true
      ;;
    -n | --no-verify)
      no_verify=true
      ;;
    --)
      shift
      break
      ;;
    -*)
      echo-err "unknown option: ${1}"
      exit 1
      ;;
    *)
      if [ -n "$message" ]; then
        echo-err "unexpected argument: ${1}"
        exit 1
      fi
      message="$1"
      ;;
  esac
  shift
done

if [ $# -ne 0 ]; then
  if [ -n "$message" ]; then
    echo-err "failed to set commit message: $*"
    echo-err "message already set: ${message}"
    exit 1
  fi
  message="$*"
fi

set --

if $add; then
  add
fi

status="$(git status --porcelain)"

if [ -z "$status" ] && [ -n "$message" ]; then
  echo-err "There are no changes so we can't create your commit: ${message}"
  exit 1
fi

if [ -n "$status" ]; then
  echo-info "Undo these changes with 'git reset $(git rev-parse --short HEAD)'"

  set --
  if $no_verify; then
    set -- "$@" --no-verify
  fi
  if $amend; then
    current_commit_author="$(git show --no-patch --format='%ae')"
    repo_email="$(git config --get user.email)"
    if [ -z "$repo_email" ]; then
      repo_email="$(git config --global --get user.email)"
    fi

    cmd="echo-run"
    if [ "$current_commit_author" != "$repo_email" ]; then
      echo "Are you sure you want to amend a commit that you don't own?"
      echo "Current commit author email: $current_commit_author"
      echo "Your email: $repo_email"
      cmd="safe-run"
    fi

    "$cmd" git commit --amend --no-edit "$@" || die $? "Failed to amend commit. Fix any errors and retry"
    unset cmd
  else
    if [ -n "$message" ]; then
      set -- "$@" --message "$message"
    fi

    echo-run git commit "$@" || die $? "Failed to create a commit. Fix any errors and retry."
  fi
else
  echo-info "Skipping commit since there were no changes."
fi

if $push; then
  if git rev-parse --abbrev-ref --symbolic-full-name '@{upstream}' >/dev/null 2>&1 && $pull; then
    echo-run git pull --rebase
  fi

  set --
  if $force; then
    set -- "$@" --force
  fi

  push "$@"
fi

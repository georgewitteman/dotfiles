#!/usr/bin/env zsh

local plugins_path="${XDG_CONFIG_HOME:-$HOME/.config}/zsh/plugins"
local compdump_file="${COMPDUMP_FILE:-${XDG_CACHE_HOME:-$HOME/.cache}/zcompdump}"

_init() {
  for plugin_path in $plugins_path/*(/N); do
    local plugin_name=${plugin_path##*/}
    source "$plugin_path"/*.plugin.zsh
    fpath=("$plugin_path" $fpath)
  done
  autoload -Uz compinit && compinit -C -d "$compdump_file"
}

_re_compinit() {
  [[ -f "$compdump_file" ]] && rm "$compdump_file"
  autoload -Uz compinit && compinit -d $compdump_file
}

_add_plugin() {
  local plugin_url="$1"
  # Remove the beginning of the URL and any extension (like .git)
  local plugin_name="${plugin_url:t:r}"
  local plugin_path="$plugins_path/$plugin_name"

  if [[ ! -d "$plugin_path" ]]; then
    echo "Installing $plugin_name"
    echo_run git clone "$plugin_url" "$plugin_path"
    [[ "$?" -ne 0 ]] && return 1
    _re_compinit
  fi
}

_usage() {
  echo "Update zsh plugins"
  echo ""
  echo "Usage: $command_name update"
  echo "       $command_name add <git-url>"
  echo "       $command_name init"
  echo "       $command_name reinit"
  echo "       $command_name help | -h | --help"
  echo ""
  echo "Options:"
  echo "  -h, --help     Show this screen."
  echo ""
}

local command_name="$0"
local action="$1"

case $action in
  update)
    _zplug_update_plugins "$plugins_path"
    _re_compinit
    ;;

  add)
    shift
    _add_plugin "$@"
    ;;

  init)
    _init
    return "$?"
    ;;

  reinit)
    _re_compinit
    return "$?"
    ;;

  help | --help | -h)
    _usage
    ;;

  *)
    _usage
    return 1
    ;;
esac

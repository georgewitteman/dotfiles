delete_branches() {
  set_color() {
    echo -n "$fg[$1]"
  }

  current_branch=$(git rev-parse --abbrev-ref HEAD)
  for branch in $(git for-each-ref --sort=committerdate refs/heads --format='%(refname:short)'); do
    if [ "$branch" != "develop" ] && [ "$branch" != "master" ] && [ "$branch" != "$current_branch" ]; then
    set_color blue
    echo "================================================="
    set_color red
    printf "%7.7s: " "Hash"
    # echo -ne "Hash:\t"
    set_color default
    echo $(git log -1 --format="%H" $branch --)

    set_color green
    printf "%7.7s: " "Date"
    # echo -ne "Date:\t"
    set_color default
    echo $(git log -1 --format="%ad (%ar)" $branch --)

    set_color cyan
    printf "%7.7s: " "Branch"
    # echo -ne "Branch:\t"
    set_color default
    echo $branch

    set_color blue
    printf "%7.7s: " "Author"
    # echo -ne "Author:\t"
    set_color default
    echo $(git log -1 --format="%an" $branch --)

    set_color magenta
    printf "%7.7s: " "Message"
    # echo -ne "Msg:\t"
    set_color default
    echo $(git log -1 --format="%s" $branch --)

    set_color blue
    echo "================================================="
    set_color default
    p=$(echo -n "Do you want to force delete "; echo -n $branch; echo -n "? [y/N] ")
    read -q "confirm?$p"
    echo -n '\n'
    if [ "$confirm" = "y" ]; then
      echo_run "git branch -D $branch"
      # git branch -D $branch
    else
      echo "Not deleting"
    fi
    echo
    fi
  done
}

# vi:ft=zsh

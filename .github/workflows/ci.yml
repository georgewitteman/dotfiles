name: CI

on:
  push:

jobs:
  macos:
    runs-on: macOS-latest
    steps:
      - run: curl --fail --silent --show-error --location "https://git.io/chezmoi" | sh -s -- -b "${HOME}/.local/bin" -d init --apply georgewitteman --branch "${GITHUB_REF#refs/heads/}"

  codespaces:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/vscode/devcontainers/base:ubuntu
      env:
        CODESPACES: true
    steps:
      - uses: actions/checkout@v3
      - run: ./install.sh

  docker:
    strategy:
      fail-fast: false
      matrix:
        image: ["ubuntu:18.04", "ubuntu:latest", "alpine:latest"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    steps:
      - run: ls -la $HOME
      - run: curl --fail --silent --show-error --location "https://git.io/chezmoi" | sh -s -- -b "${HOME}/.local/bin" -d init --apply georgewitteman --branch "${GITHUB_REF#refs/heads/}" || true
      - run: apk update && apk add curl
        if: startsWith(matrix.image, 'alpine')
      - run: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --yes curl
        if: startsWith(matrix.image, 'ubuntu')
      - run: curl --fail --silent --show-error --location "https://git.io/chezmoi" | sh -s -- -b "${HOME}/.local/bin" -d init --apply georgewitteman --branch "${GITHUB_REF#refs/heads/}" || true
      - run: apk update && apk add git
        if: startsWith(matrix.image, 'alpine')
      - run: apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --yes git
        if: startsWith(matrix.image, 'ubuntu')
      - run: curl --fail --silent --show-error --location "https://git.io/chezmoi" | sh -s -- -b "${HOME}/.local/bin" -d init --apply georgewitteman --branch "${GITHUB_REF#refs/heads/}"
      - uses: extractions/setup-just@v1
        # Docs: In rare circumstances you might get rate limiting errors, this
        # is because this workflow has to make requests to GitHub API in order
        # to list available releases. If this happens you can set the
        # GITHUB_TOKEN environment variable.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ls -la $HOME
      - run: |
          PATH="${HOME}/.local/bin:${PATH}"
          cd "${HOME}/.local/share/chezmoi"
          just verbose=true sanity

  lint:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: extractions/setup-just@v1
        # Docs: In rare circumstances you might get rate limiting errors, this
        # is because this workflow has to make requests to GitHub API in order
        # to list available releases. If this happens you can set the
        # GITHUB_TOKEN environment variable.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: 'curl -sS https://webinstall.dev/shfmt | bash'
      - run: 'curl -sS https://webinstall.dev/shellcheck | bash'
      - run: rm -rf ~/.nvm
      - run: ./install.sh
      - run: 'set -x; . ${HOME}/.profile && just verbose=true lint'

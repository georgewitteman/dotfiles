name: CI

on:
  push:

jobs:
  dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          load: true
          tags: georgewitteman/gitpod-dotfiles-base:latest

      - name: Install dotfiles to test
        run: docker run --rm georgewitteman/gitpod-dotfiles-base:latest sh -c 'CI=true sh -c "$(curl -fsLS git.io/chezmoi)" -- init --apply georgewitteman'

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          tags: georgewitteman/gitpod-dotfiles-base:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}

  dev-container-builds:
    runs-on: ubuntu-latest
    concurrency:
      group: dev-containers-${{ github.head_ref }}
      cancel-in-progress: true
    steps:
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: .docker/dev-alpine.Dockerfile
          tags: georgewitteman/dev-alpine:latest
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/master' }}

  clone-and-install:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-18.04, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: rm -rf ~/.nvm
      - run: ./install.sh

  codespaces:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/vscode/devcontainers/base:ubuntu
      env:
        CODESPACES: true
    steps:
      - uses: actions/checkout@v3
      - run: ./install.sh

  docker:
    strategy:
      fail-fast: false
      matrix:
        image: ["ubuntu:18.04", "ubuntu:20.04"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    steps:
      - run: ls -la $HOME
      - run: apt update
      - run: apt install --yes curl openssh-client unzip gnupg vim git
      - name: CVE-2022-24765 workaround (https://github.com/actions/checkout/issues/760)
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
      - run: ./install.sh
      - run: ls -la $HOME

  docker-alpine:
    strategy:
      fail-fast: false
      matrix:
        image: ["alpine:latest"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    steps:
      - run: ls -la $HOME
      - run: apk --update --upgrade add git
      - name: CVE-2022-24765 workaround (https://github.com/actions/checkout/issues/760)
        run: git config --global --add safe.directory $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
      - run: ./install.sh
      - run: ls -la $HOME

  shfmt:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: 'curl -sS https://webinstall.dev/shfmt | bash'
      - run: rm -rf ~/.nvm
      - run: ./install.sh
      - run: ". ${HOME}/.profile && ${HOME}/.bin/shfmt-check-all --verbose --debug"

  shellcheck:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: 'curl -sS https://webinstall.dev/shellcheck | bash'
      - run: rm -rf ~/.nvm
      - run: ./install.sh
      - run: ". ${HOME}/.profile && ${HOME}/.bin/shellcheck-all --verbose --debug"

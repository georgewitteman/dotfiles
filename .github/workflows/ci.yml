name: CI

on:
  push:
  pull_request:

jobs:
  dockerfile-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: docker build --file Dockerfile --tag dockerfile-test .

  clone-and-install:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-18.04, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Uninstall homebrew
        if: ${{ matrix.os == 'macOS-latest' }}
        run: 'sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)" -- --force'
      - run: ./install.sh

  codespaces:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/vscode/devcontainers/base:ubuntu
      env:
        CODESPACES: true
    steps:
      - uses: actions/checkout@v2
      - run: ./install.sh

  docker:
    strategy:
      matrix:
        image: ["ubuntu:18.04", "ubuntu:20.04"]
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    steps:
      - run: apt update
      - run: apt install --yes curl openssh-client unzip gnupg vim git
      - uses: actions/checkout@v2
      - run: ./install.sh

  shellcheck:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - run: ./install.sh
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: 'sudo apt update; sudo apt install --yes shellcheck'
      - if: ${{ matrix.os == 'macOS-latest' }}
        run: 'brew install shellcheck'
      - run: "${HOME}/bin/shellcheck-all"

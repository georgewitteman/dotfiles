#!/usr/bin/env bash

set -o errexit
set -o nounset

USAGE="Generate a differential diff or revision.

Usage:
  $(basename "$0") -h | --help
  $(basename "$0") --amend --message <message>
  $(basename "$0") [options]

Options:
  -a, --amend           Whether to amend the current commit/diff or create a new one.
  -h, --help            Show usage and exit.
  -m, --message=<msg>   Message to include in the diff update.
  --no-verify           Skip pre-commit hooks.
  --plan-changes        Create or update a revision without requesting a code review.
  -r, --rebase          Rebase before pushing to Phabricator.
  --skip-staging        Don't upload to staging repository.
  --draft               Draft diff
  --nolint              Prevent lint errors from preventing diff upload.
  --trace               Log debug info."

message='' amend='' draft='' no_verify='' rebase='' skip_staging='' trace='' no_lint=false

die() {
  [ "$#" -ge 2 ] && echo-err "$2"
  exit "$1"
}

while [ "$#" -gt 0 ]; do
  case "$1" in
    -[[:alnum:]][[:alnum:]]*)
      _value="-${1##-?}"
      _arg="${1%%${1##-?}}"
      ;;
  esac
  if [ -n "${_arg:-}${_value:-}" ]; then
    shift
    set -- "$_arg" "$_value" "$@"
  fi
  unset _arg _value
  case "$1" in
    -h | --help)
      echo "$USAGE"
      exit
      ;;
    -m | --message)
      [ "$#" -ge 2 ] || die 1 "${1} requires a value"
      message="$2"
      shift
      ;;
    -a | --amend) amend=1 ;;
    -r | --rebase) rebase=1 ;;
    --skip-staging) skip_staging=1 ;;
    --draft) draft=1 ;;
    --no-verify) no_verify=1 ;;
    --nolint) no_lint=true ;;
    --trace) trace=1 ;;
    --)
      shift
      break
      ;;
    -?*) die 1 "unknown option: ${1}" ;;
    *) break ;;
  esac
  shift
done

# echo "message: ${message}"
# echo "amend: ${amend}"
# echo "draft: ${draft}"
# echo "no_verify: ${no_verify}"
# echo "rebase: ${rebase}"
# echo "skip_staging: ${skip_staging}"
# exit

if is-clean-repo && [[ -z "$amend" ]]; then
  die 1 "No changes to add. Did you mean 'arc-diff -a'?"
fi

base="HEAD"
if [ -n "$amend" ]; then
  base="HEAD^"
fi

# Running lint first makes sure the diff only has actual failures (not failures
# that have been autofixed)
if ! arc-lint --rev "$base" && ! $no_lint; then
  exit 1
fi

# Add files
echo-run git add --all || die "$?" "Failed to stage changes."

# Commit
commit_run_cmd="echo-run"
git_options=(--quiet)
if [[ -n "$no_verify" ]]; then
  git_options+=(--no-verify)
fi
if [[ -n "$amend" ]]; then
  git_options+=('--amend' '--no-edit')
else
  git_options+=('--no-edit')
  if [[ -n "$message" ]]; then
    git_options+=("--message" "$message")
  else
    git_options+=('--message=<revision title>')
  fi
fi

current_commit_author="$(git show --no-patch --format='%ae')"
repo_email="$(git config --get user.email)"
if [[ -z "$repo_email" ]]; then
  repo_email="$(git config --global --get user.email)"
fi

if [[ -n "$amend" && "$current_commit_author" != "$repo_email" ]]; then
  echo-warn "Are you sure you want to amend a commit that you don't own?"
  echo-warn "Current commit author email: $current_commit_author"
  echo-warn "Your email: $repo_email"
  commit_run_cmd="safe-run"
fi

if [[ -z "$amend" && "$current_commit_author" = "$repo_email" ]]; then
  echo-warn "Are you sure you want to create a new commit? You own the current commit."
  echo-warn "Current commit summary: $(git show --quiet --format='%s')"
  commit_run_cmd="safe-run"
fi

prev_head="$(git rev-parse HEAD)"
"$commit_run_cmd" git commit "${git_options[@]}" || die "$?" "Failed to commit changes to git."
if [[ -n "$amend" ]]; then
  echo-info "Use 'git reset $prev_head' if you want to un-amend."
fi

if [[ -n "$rebase" ]]; then
  echo-info "Rebasing off of master branch."
  echo-run rebase || die "$?" "Failed to rebase branch."
fi

# New diffs should always have the --draft flag
if [[ -n "$amend" ]] && ! git show --no-patch --format="%b" | grep --quiet "Differential Revision"; then
  # We're amending a commit, but the commit doesn't have a diff for it yet
  draft=true
elif [[ -z "$amend" ]]; then
  # If we're not amending a diff then we're creating a new one
  draft=true
fi

# Arc Diff
arc_options=()

# When linting git repositories, amend HEAD with all patches suggested by lint
# without prompting.
arc_options+=('--amend-all')

[[ -n "$draft" ]] && arc_options+=('--draft')
[[ -n "$skip_staging" ]] && arc_options+=('--skip-staging')
[[ -n "$no_verify" ]] && arc_options+=('--nolint' '--nounit')
[[ -n "$message" ]] && arc_options+=('--message' "$message")
[[ -n "$trace" ]] && arc_options+=('--trace')

if ! $no_lint; then
  arc_options+=('--apply-patches')
else
  arc_options+=('--nolint')
fi

echo-run arc diff HEAD^ "${arc_options[@]}" || die "$?" "Failed to create diff."

# Update the commit message from whatever's in phabricator
echo-run arc amend || die "$?" "Failed to update local commit message from Phabricator."

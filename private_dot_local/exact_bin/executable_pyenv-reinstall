#!/bin/sh

set -o errexit

if [ $# -ge 1 ]; then
  case "$1" in
    -h | --help)
      echo "usage: $(basename "$0")"
      exit
      ;;
  esac
fi

if [ -z "$PYENV_ROOT" ]; then
  # shellcheck disable=SC2016
  echo-err '$PYENV_ROOT is not defined.'
  exit 1
fi

# Clear any arguments
set --

for version_path in "${PYENV_ROOT}/versions/"*; do
  [ -d "$version_path" ] || continue
  set -- "$@" "$(basename "$version_path")"
done

if [ $# -eq 0 ]; then
  set -- "3.7.8"
fi

tmp="$(mktemp -d)"

if [ -d "${PYENV_ROOT}/cache" ]; then
  echo "${PYENV_ROOT}/cache exists"
  echo-run cp -r "${PYENV_ROOT}/cache" "$tmp"
else
  echo "${PYENV_ROOT}/cache does not exist"
fi

if [ -d "$PYENV_ROOT" ]; then
  if [ -n "$CI" ]; then
    echo-run rm -rf "$PYENV_ROOT"
  else
    safe-run rm -rf "$PYENV_ROOT"
  fi
fi
echo-run git clone https://github.com/pyenv/pyenv.git "$PYENV_ROOT"
echo-run git clone https://github.com/pyenv/pyenv-doctor.git "$PYENV_ROOT/plugins/pyenv-doctor"
echo-run git clone https://github.com/pyenv/pyenv-update.git "$PYENV_ROOT/plugins/pyenv-update"
echo-run git clone https://github.com/pyenv/pyenv-which-ext.git "$PYENV_ROOT/pyenv/pyenv-which-ext"

if [ -d "${tmp}/cache" ]; then
  echo-run mv "${tmp}/cache" "${PYENV_ROOT}/cache"
else
  echo-run mkdir -p "${PYENV_ROOT}/cache"
fi

for version in "$@"; do
  echo-run pyenv install "$version" &
done

wait

if [ $# -gt 0 ]; then
  echo-info "Setting global python versions to $*"
  echo-run pyenv global "$@"
fi

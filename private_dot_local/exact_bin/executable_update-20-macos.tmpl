{{- if eq .chezmoi.os "darwin" -}}
#!/usr/bin/env zsh

set -e

if [[ ! "$OSTYPE" =~ "darwin" ]]; then
  echo-warn "Not on macOS. Skipping macOS."
  exit
fi

# install homebrew if it's missing
if (( ! $+commands[brew] )); then
  echo-info "Installing homebrew"
  echo-eval '/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"'
fi

# Don't need to explicitly run update if we're running upgrade
# echo-run command brew update

echo-run brew upgrade
# echo-run command brew outdated
# echo-warn "Skipping 'brew upgrade' since it's kind of slow."

local brew_list=($(command brew list --formula -1))

if (( $brew_list[(Ie)universal-ctags] )); then
  echo-ok "universal-ctags already installed"
else
  echo-run command brew install --HEAD universal-ctags/universal-ctags/universal-ctags
fi

# Temporily not installing HEAD because a required patch is broken
# if (( $brew_list[(Ie)vim] )); then
#   echo-ok 'vim already installed'
# else
#   echo-run command brew install --HEAD vim
# fi

{
  echo 'brew "tree"'
  echo 'brew "awscli"'
  echo 'brew "chezmoi"'
  echo 'brew "curl"'
  echo 'brew "fd"'
  echo 'brew "fzf"'
  echo 'brew "git"'
  echo 'brew "gnupg"'
  echo 'brew "htop"'
  echo 'brew "hyperfine"'
  echo 'brew "jq"'
  echo 'brew "neovim"'
  echo 'brew "openssl"' # pyenv recommends
  echo 'brew "pgcli"'
  echo 'brew "pinentry-mac"'
  echo 'brew "readline"' # pyenv recommends
  echo 'brew "ripgrep"'
  echo 'brew "rsync"'
  echo 'brew "shellcheck"'
  echo 'brew "sqlite"' # pyenv recommends
  echo 'brew "starship"'
  echo 'brew "terraform"'
  echo 'brew "tmux"'
  echo 'brew "tree"'
  echo 'brew "wget"'
  echo 'brew "xz"' # pyenv recommends
  echo 'brew "zlib"' # pyenv recommends
  echo 'brew "zsh"'
  if ! command -v aws >/dev/null 2>&1; then
    echo 'brew "awscli"'
  fi
  if ! ls /usr/local/Cellar | grep -q openssl >/dev/null 2>&1; then
    echo 'brew "openssl"'
  fi
} | echo-run brew bundle --no-lock --file=/dev/stdin
{{ end -}}

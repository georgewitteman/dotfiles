#!/usr/bin/env zsh

# Gets the latest tags by date and by version, and verifies that they are the same

local pattern num_tags egrep_pattern by_version by_date
num_tags=1

OPTS=`getopt -o p:n:g:vd --long by-version,by-date,num-tags:,pattern:,egrep-pattern: -- "$@"`
eval set -- "$OPTS"
while true; do
  case "$1" in
    -v | --by-version) by_version=1 ;;
    -d | --by-date) by_date=1 ;;
    -p | --pattern) pattern="$2"; shift ;;
    -n | --num-tags) num_tags="$2"; shift ;;
    -g | --egrep-pattern) egrep_pattern="$2"; shift ;;
    -- ) shift; break ;;
  esac
  shift
done

local egrep_cmd=(cat)
if [[ -n "$egrep_pattern" ]]; then
  egrep_cmd=(egrep -v "$egrep_pattern")
fi

if [[ -z "$pattern" ]]; then
  echo "Invalid arguments." >&2
  return 1
fi

local latest_tags_by_date=($(git tag --sort=taggerdate --list "$pattern" | $egrep_cmd | tail -"$num_tags"))
local latest_tags_by_version=($(git tag --sort=version:refname --list "$pattern" | $egrep_cmd | tail -"$num_tags"))

if [[ "$by_version$by_date" = "1" ]]; then
  if (( $by_version )); then
    echo "${(j:\n:)latest_tags_by_version}"
    return
  elif (( $by_date )); then
    echo "${(j:\n:)latest_tags_by_date}"
    return
  fi
fi

if [[ "${#latest_tags_by_date}" != "${#latest_tags_by_version}" ]]; then
  echo "Different number of tags returned" >&2
  return 1
fi

[[ -z "${latest_tags_by_date[1]}" ]] && return 1
[[ -z "${latest_tags_by_version[1]}" ]] && return 1

[[ "${#latest_tags_by_date}" -eq 0 ]] && return 1

for i in {1.."$num_tags"}; do
  if [[ "${latest_tags_by_date[$i]}" != "${latest_tags_by_version[$i]}" ]]; then
    echo "index $i: ${latest_tags_by_date[$i]} != ${latest_tags_by_version[$i]}" >&2
    return 1
  fi
done

echo "${(j:\n:)latest_tags_by_version}"
